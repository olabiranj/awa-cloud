{"version":3,"sources":["reducer/itemReducer.js","reducer/weatherReducer.js","reducer/errorReducer.js","reducer/index.js","store.js","components/Weather.js","actions/weatherActions.js","components/Header.js","components/Search.js","views/Index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","loading","city","errMsg","combineReducers","item","state","action","type","payload","filter","_id","weather","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","Weather","useSelector","useState","current","setCurrent","dispatch","useDispatch","useEffect","axios","get","then","res","data","process","WEATHER_KEY","success","error","info","catch","err","className","map","key","location","name","style","backgroundImage","weather_icons","country","weather_descriptions","temperature","wind_speed","wind_dir","localtime","utc_offset","pressure","humidity","cloudcover","visibility","lat","lon","Header","Search","input","setInput","method","onSubmit","e","preventDefault","placeholder","value","onChange","target","id","Index","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.47be7a03.chunk.js","sourcesContent":["const initialState = {\r\n    items: [],\r\n    loading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'GET_ITEMS':\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                loading: false\r\n            };\r\n        case 'EDIT_STATUS':\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                loading: false\r\n            };\r\n        case 'DELETE_ITEM':\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item._id !== action.payload)\r\n            };\r\n        case 'ADD_ITEM':\r\n            return {\r\n                ...state,\r\n                items: [action.payload, ...state.items]\r\n            };\r\n        case 'ITEMS_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","const initialState = {\r\n    city: [],\r\n    loading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'GET_CITY':\r\n            return {\r\n                city: [action.payload],\r\n                loading: false\r\n            };\r\n        case 'GET_CURRENT_CITY':\r\n            return {\r\n                city: [action.payload],\r\n                loading: false\r\n            };\r\n        case 'SET_CITY_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","const initialState = {\r\n    errMsg: ''\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_ERROR':\r\n            return {\r\n               errMsg: action.payload \r\n            };\r\n       \r\n        case 'CLEAR_ERROR':\r\n            return {\r\n                errMsg: ''\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport itemReducer from './itemReducer';\r\nimport weatherReducer from './weatherReducer';\r\nimport errorReducer from './errorReducer';\r\n\r\nexport default combineReducers({\r\n    item: itemReducer,\r\n    weather: weatherReducer,\r\n    errMsg: errorReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(...middleWare))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Offline, Online } from \"react-detect-offline\";\r\nimport { getCurrentCity } from \"../actions/weatherActions\";\r\n\r\nconst Weather = () => {\r\n    const weather = useSelector(state => state.weather);\r\n    const errMsg = useSelector(state => state.errMsg.errMsg);\r\n    const [current, setCurrent] = useState('');\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>  {\r\n        dispatch({\r\n            type: 'SET_CITY_LOADING'\r\n        })\r\n        axios.get('https://extreme-ip-lookup.com/json')\r\n        .then(\r\n                (res) => {\r\n                    dispatch(getCurrentCity(res.data.city))\r\n                    setCurrent(res.data.city)\r\n                }\r\n            )\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: 'SET_CITY_LOADING'\r\n            })\r\n            dispatch({\r\n                type: 'SET_ERROR',\r\n                payload: 'Your current location could not be found, Kindly search for another city.'\r\n            })\r\n        })\r\n        },[]\r\n    )\r\n        \r\n\r\n    return (\r\n        <>\r\n            <Offline>You're offline, check your network connectivity</Offline>\r\n            <Online> </Online>\r\n            {current ? <h4 className='text-secodary mr-4 float-right'>Your current location is {current}</h4> : ''}\r\n            {weather.loading || errMsg ? \r\n                <div>\r\n                    {errMsg ? <h5 className='text-info ml-4 text-danger'>{errMsg}</h5> :\r\n                        <h5 className='text-info ml-4'>Our AI is detecting your location...</h5>}\r\n                    <div className=\"container bg-light bg-skeleton col-lg-5\">\r\n\r\n                    </div>\r\n                    <div className=\"container bg2 col-lg-5\">\r\n                        <div className=\"row\">\r\n                            <div className=\"flag-7\">\r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flag-3 float-right\">\r\n                                <div className=\"skeleton png\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container-fulid skeleton\">\r\n                        </div>\r\n                        <div className=\"row info mt-4\">\r\n                            <div className=\"flag-6\">\r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                            </div>\r\n                            <div className=\"flag-6 float-right line\">\r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                                <div className=\"container-fulid skeleton\">\r\n                                </div> \r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <>\r\n                {weather.city.map(city => (\r\n                    <div key='hu'>\r\n                            <div className=\"container bg-light bg col-lg-5\">\r\n\r\n                            </div>\r\n                            <div className=\"container bg2 col-lg-5\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"flag-7\">\r\n                                        <h2 className='head'>City: <span className='text-secondary'>{city.location.name}</span></h2>\r\n                                    </div>\r\n                                    <div className=\"flag-3 float-right\">\r\n                                    <div className=\"png\" style={{ backgroundImage: `url('${city.current.weather_icons[0]}')`}}>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <h3 className='head'>Country: <span className='text-secondary'>{city.location.country}</span></h3>\r\n                                <div className=\"row info mt-4\">\r\n                                    <div className=\"flag-6\">\r\n                                        <p>Weather: <span className='text-secondary'>{city.current.weather_descriptions[0]}</span></p>\r\n                                        <p>Temperature: <span className='text-secondary'>{city.current.temperature}&deg;C</span></p>\r\n                                        <p>Wind Speed: <span className='text-secondary'>{city.current.wind_speed}Km/H</span></p>\r\n                                        <p>Wind Direction: <span className='text-secondary'>{city.current.wind_dir}</span></p>\r\n                                        <p>Local Time: <span className='text-secondary'>{city.location.localtime}</span></p>\r\n                                        <p>UTC: <span className='text-secondary'>{city.location.utc_offset}</span></p>\r\n                                    </div>\r\n                                    <div className=\"flag-6 float-right line\">\r\n                                        <p>Pressure: <span className='text-secondary'>{city.current.pressure}mb</span></p>\r\n                                        <p>Humidity: <span className='text-secondary'>{city.current.humidity}%</span></p>\r\n                                        <p>Cloud Cover: <span className='text-secondary'>{city.current.cloudcover}%</span></p>\r\n                                        <p>Visibility: <span className='text-secondary'>{city.current.visibility}km</span></p>\r\n                                        <p>Latitude: <span className='text-secondary'>{city.location.lat}&deg;</span></p>\r\n                                        <p>Longitude: <span className='text-secondary'>{city.location.lon}&deg;</span></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    </>\r\n                }\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default Weather;","import axios from 'axios';\r\n\r\nexport const getCity = (city) => dispatch => {\r\n    axios\r\n        .get(`http://api.weatherstack.com/current?access_key=${process.env.WEATHER_KEY}&query=${city}`)\r\n        .then(res => {\r\n            if (res.data.success === false) {\r\n                dispatch({\r\n                    type: 'SET_CITY_LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'SET_ERROR',\r\n                    payload: 'Something went wrong'\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: 'GET_CITY',\r\n                    payload: res.data\r\n                })\r\n            }\r\n        })\r\n        .catch(err =>\r\n            {\r\n                dispatch({\r\n                type: 'SET_CITY_LOADING'\r\n            })\r\n            dispatch({\r\n                type: 'SET_ERROR',\r\n                payload: 'Weather informations about the location you entered could not be found, Kindly search for another city.'\r\n            })}\r\n        );\r\n};\r\n\r\nexport const getCurrentCity = (city) => dispatch => {\r\n    axios\r\n        .get(`http://api.weatherstack.com/current?access_key=${process.env.WEATHER_KEY}&query=${city}`)\r\n        .then(res => {\r\n\r\n            if (res.data.success === false) {\r\n                dispatch({\r\n                    type: 'SET_CITY_LOADING'\r\n                })\r\n                dispatch({\r\n                    type: 'SET_ERROR',\r\n                    payload: res.data.error.info\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: 'GET_CURRENT_CITY',\r\n                    payload: res.data\r\n                })\r\n            }\r\n            \r\n        })\r\n        .catch(err =>\r\n            {\r\n                dispatch({\r\n                type: 'SET_ERROR',\r\n                payload: 'Weather informations about your current location could not be found, Kindly search for another city.'\r\n                })\r\n                dispatch({\r\n                type: 'SET_CITY_LOADING'\r\n                })\r\n        }\r\n        );\r\n};\r\nexport const setCityLoading = () => dispatch => {\r\n    dispatch({\r\n        type: 'SET_CITY_LOADING'\r\n    })\r\n};\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nconst Header = () => (\r\n    <ul className=\"nav justify-content-center bg-dark py-1\">\r\n        <h1 className='text-light header-text'>Awa Cloud</h1>\r\n    </ul>\r\n)\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport {getCity} from '../actions/weatherActions';\r\n\r\n\r\nconst Search = () => {\r\n    const dispatch = useDispatch();\r\n    const [input, setInput] = useState('');\r\n    const submit = (e) => {\r\n        dispatch({\r\n            type: 'SET_CITY_LOADING'\r\n        })\r\n        e.preventDefault();\r\n        dispatch(getCity(input))\r\n    }\r\n    return(\r\n        <div className=\"container col-lg-3 mt-4\">\r\n            <form action=\"\" method=\"post\" onSubmit={submit}>\r\n                <div className=\"input-group mb-3\">\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        placeholder='Search City...'\r\n                        value={input}\r\n                        onChange={e => setInput(e.target.value)} />\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-outline-secondary\" type=\"submit\" id=\"button-addon2\">Search</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport Weather from '../components/Weather';\r\nimport Header from '../components/Header';\r\nimport Search from '../components/Search';\r\n\r\nconst Index = () => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Search/>\r\n            <Weather/>\r\n        </>\r\n    )\r\n}\r\nexport default Index;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Index from './views/Index'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div>\n        <Index />\n      </div>\n    </Provider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}